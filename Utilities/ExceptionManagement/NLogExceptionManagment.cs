// <auto-generated/> - Added to exclude style cop

#region Included Namespaces
using System;
using System.Threading.Tasks;
using NLog;
using Utilities.Interfaces;
#endregion

namespace Utilities.ExceptionManagement
{
    #region NLogExceptionManagment
    /// <summary>
    /// NLogExceptionManagement
    /// </summary>
    /// <typeparam name="T"></typeparam>
    public class NLogExceptionManagment : ILog
    {
        /// <summary>
        /// ILogger
        /// </summary>
        private static readonly ILogger _Iogger = LogManager.GetCurrentClassLogger();

        #region NLogExceptionManagment
        /// <summary>
        /// NLogExceptionManagement
        /// </summary>
        public NLogExceptionManagment()
        {
        }
        #endregion

        /// <summary>
        /// Information
        /// </summary>
        /// <param name="message"></param>
        public void Information(string message)
        {
            _Iogger.Info(message);
        }

        /// <summary>
        /// Warning
        /// </summary>
        /// <param name="message"></param>
        public void Warning(string message)
        {
            _Iogger.Warn(message);
        }

        /// <summary>
        /// Debug
        /// </summary>
        /// <param name="message"></param>
        public void Debug(string message)
        {
            _Iogger.Debug(message);
        }

        /// <summary>
        /// Error
        /// </summary>
        /// <param name="message"></param>
        public void Error(string message)
        {
            _Iogger.Error(message);
        }
    }
    #endregion
}
